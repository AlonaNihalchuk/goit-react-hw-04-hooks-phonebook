{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Form/Form.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","handleNameChange","e","target","value","preventDefault","id","uuidv4","className","style","formSection","formLabel","onChange","type","pattern","title","required","formBtn","ContactItem","contact","onClick","contactsButton","Contacts","contacts","onDelete","contactsList","map","Filter","filter","propType","PropTypes","func","isRequired","string","App","setContacts","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","newContact","find","alert","prevState","currentTarget","normalizedFilter","toLowerCase","includes","getVisibleContact","contactId","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35062ab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"Form_formSection__1vkov\",\"formLabel\":\"Form_formLabel__eTphK\",\"formBtn\":\"Form_formBtn__je8VV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__1RYPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsButton\":\"ContactItem_contactsButton__1lppD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsHead\":\"Filter_contactsHead__tQynn\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./Form.module.css\";\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    onSubmit(name, number, id);\n    formReset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.formSection}>\n      <label className={style.formLabel}>\n        Name{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={style.formLabel}>\n        Phone{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифер и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={style.formBtn}>\n        Save\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport style from \"./ContactItem.module.css\";\n\nfunction ContactItem({ contact, onClick }) {\n  return (\n    <li className=\"\">\n      <p className=\"\">{contact.name}:</p>\n      <p>{contact.number}</p>\n      <button\n        className={style.contactsButton}\n        onClick={() => onClick(contact.id)}\n      >\n        delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport style from \"./Contacts.module.css\";\nimport ContactItem from \"./ContactItem/ContactItem\";\n\nfunction Contacts({ contacts, onDelete }) {\n  return (\n    <section className={style.contacts}>\n      <ul className={style.contactsList}>\n        {contacts.map((contact) => (\n          <ContactItem key={contact.id} contact={contact} onClick={onDelete} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={style.filter}>\n      Find contact by name{\" \"}\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propType = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Form from \"../Form/Form\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  const formSubmitHandler = (name, number, id) => {\n    const newContact = {\n      id,\n      name,\n      number,\n    };\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    setContacts((prevState) => [newContact, ...prevState]);\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    console.log(contactId);\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <section className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <Form onSubmit={formSubmitHandler} />\n      <h2 className=\"contactsHead\">Contacts </h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <Contacts contacts={getVisibleContact()} onDelete={deleteContact} />\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}